{"version":3,"sources":["di.ts","experiments.ts","index.ts"],"names":[],"mappings":";AAmBA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAlBA,MAAM,EAAI,IAAI,IAER,EAAS,GAAc,EAAE,WAAW,GAEpC,EAAgB,MACjB,IACA,MAAM,IACN,IAAI,GACJ,KAAK,IACL,UAAU,EAAG,IASlB,SAAgB,EAAU,GACjB,MAAA,CAAC,EAAQ,IACd,OAAO,eAAe,EAAQ,EAAM,CAClC,IAAK,IAAM,QAAA,IAAI,KAVR,QAAA,IAAU,CAAA,GAAwB,EAAE,IAAI,EAAU,KAClD,QAAA,IAAU,CAAA,KAAgC,EAAE,IAAI,EAAU,KAC1D,QAAA,IAAM,EAAI,EAAkB,EAAO,EAAU,KACxD,EAAE,IAAI,EAAM,IAAI,GAAK,IAAI,IACd,QAAA,MAAQ,KAAM,EAAE,SAChB,QAAA,OAAa,CAAA,GAAqB,EAAE,OAAO,EAAU,KAElE,QAAA,OAAA;;ACDA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAlBA,MAAA,EAAA,QAAA,QAIA,SAAgB,KAAa,GACpB,MAAA,IACF,KAMG,MAAA,EAAI,EAAE,GAAG,MACf,EAAE,GAAG,MAAQ,KAAI,IAAoB,IACnC,EAAE,MAAM,KAAM,EAAd,CAAoB,EAAG,IAAI,GAAK,EAAA,IAAI,OAI1C,SAAgB,KAAS,GAChB,MAAA,IACF,KAMG,MAAA,EAAI,EAAE,GAAG,MACf,EAAE,GAAG,MAAQ,KACX,EAAE,MACA,KACA,EAAG,IAAI,GAAK,EAAA,IAAI,OA1BxB,QAAA,OAAA,EAcA,QAAA,GAAA;;ACjBA,aAAA,SAAA,EAAA,GAAA,IAAA,IAAA,KAAA,EAAA,QAAA,eAAA,KAAA,QAAA,GAAA,EAAA,IAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IADA,EAAA,QAAA,SACA,EAAA,QAAA","file":"index.js","sourceRoot":"../src","sourcesContent":["export type ObjectType<T> = new (...args: unknown[]) => T;\nconst C = new Map();\n\nconst ascii = (a: string) => a.charCodeAt(0);\n\nconst toHashKey = <T>(c: ObjectType<T>) =>\n  `${c}`\n    .split('')\n    .map(ascii)\n    .join('')\n    .substring(0, 50);\n\nexport const get = <T>(c: ObjectType<T>): T => C.get(toHashKey(c));\nexport const has = <T>(c: ObjectType<T>): boolean => !!C.has(toHashKey(c));\nexport const set = <T>(c: ObjectType<T>, hash = toHashKey(c)): T =>\n  C.set(hash, new c()).get(hash);\nexport const clear = () => C.clear();\nexport const remove = <T>(c: ObjectType<T>) => C.delete(toHashKey(c));\n\nexport function Inject<T>(clazz: ObjectType<T>): PropertyDecorator {\n  return (target, name: string) =>\n    Object.defineProperty(target, name, {\n      get: () => set(clazz)\n    });\n}\n","import { ObjectType, set } from './di';\n\nexport type Reader<T, K> = (d?: T) => K;\n\nexport function Reader<T>(...di: ObjectType<T>[]): MethodDecorator {\n  return (\n    ...a: [\n      Record<string, unknown>,\n      string | symbol,\n      TypedPropertyDescriptor<unknown>\n    ]\n  ) => {\n    const o = a[2].value as Function;\n    a[2].value = (...args: unknown[]) => () =>\n      o.apply(this, args)(di.map(p => set(p)));\n  };\n}\n\nexport function DI<T>(...di: ObjectType<T>[]): MethodDecorator {\n  return (\n    ...a: [\n      Record<string, unknown>,\n      string | symbol,\n      TypedPropertyDescriptor<unknown>\n    ]\n  ) => {\n    const m = a[2].value as Function;\n    a[2].value = () =>\n      m.apply(\n        this,\n        di.map(p => set(p))\n      );\n  };\n}\n","export * from './di';\nexport * from './experiments';\n"]}